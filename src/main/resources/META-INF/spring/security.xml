<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- Enable the @Secured annotation to secure service layer methods -->
    <global-method-security secured-annotations="enabled" pre-post-annotations="enabled" authentication-manager-ref="authenticationManager"/> 
    <http security="none" pattern="/favicon.ico" authentication-manager-ref="authenticationManager"/>
 
    <beans:bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
        <filter-chain-map path-type="ant">
            <filter-chain pattern="/**" filters="securityContextPersistenceFilter"/>
        </filter-chain-map>
    </beans:bean>

    <beans:bean id="securityContextPersistenceFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter"/>

    <authentication-manager id="authenticationManager">
        <authentication-provider ref="authProvider"></authentication-provider>
    </authentication-manager>
    
    <beans:bean id="authProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
	  <beans:property name="userDetailsService" ref="userService"  />
	  <beans:property name="passwordEncoder" ref="encoder" />
	</beans:bean>
	
	<!-- For hashing and salting user passwords -->
    <beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
   
	<beans:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler">
  		<beans:property name="invalidateHttpSession" value="false" />
	</beans:bean>
	
</beans:beans>